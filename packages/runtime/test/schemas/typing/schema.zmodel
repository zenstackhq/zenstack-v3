datasource db {
    provider = 'postgresql'
    url = env('DATABASE_URL')
}

enum Role {
    ADMIN
    USER
}

enum Status {
    ACTIVE
    INACTIVE
    BANNED
}

type Identity {
    providers IdentityProvider[]
}

type IdentityProvider {
    id   String
    name String?
}

model User {
    id        Int       @id @default(autoincrement())
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    name      String
    email     String    @unique
    role      Role      @default(USER)
    status    Status[]
    posts     Post[]
    profile   Profile?
    postCount Int       @computed
    identity  Identity? @json
}

model Post {
    id       Int    @id @default(autoincrement())
    title    String
    content  String
    author   User   @relation(fields: [authorId], references: [id])
    authorId Int
    tags     Tag[]
    meta     Meta?
}

model Profile {
    id            Int     @id @default(autoincrement())
    age           Int
    region        Region? @relation(fields: [regionCountry, regionCity], references: [country, city])
    regionCountry String?
    regionCity    String?
    user          User    @relation(fields: [userId], references: [id])
    userId        Int     @unique
}

model Tag {
    id    Int    @id @default(autoincrement())
    name  String
    posts Post[]
}

model Region {
    country  String
    city     String
    zip      String?
    profiles Profile[]
    @@id([country, city])
}

model Meta {
    id        Int     @id @default(autoincrement())
    reviewed  Boolean
    published Boolean
    post      Post    @relation(fields: [postId], references: [id])
    postId    Int     @unique
}
